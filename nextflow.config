manifest {
  author = 'Eva, Martin'
  name = 'sc2-sewage'
  description = 'Analysis pipeline to estimate sc2 lineage abundances from wastewater samples'
  mainScript = 'main.nf'
  nextflowVersion = '>=20.01.0'
}

// default parameters
params {
    max_cores = Runtime.runtime.availableProcessors()
    cores = 2
    memory = '2GB'
    help = false
    profile = false

    // input
    gisaid = ''
    desh = false
    desh_data = ''
    gisaid_desh_map = ''
    query = ''
    reference = ''

    // process-specific parameters
    continent = ''
    country = ''
    startdate = ''
    enddate = ''
    min_len = 29500
    k = 1000
    seed = 0
    min_aaf = 0.5
    max_per_lineage = 100
    min_ab = 0
    fragment_length = 200
    fragment_length_sd = 20
    kallisto_threads = 20

    // output
    output = 'results'
    workdir = "/tmp/nextflow-work-sc2-sewage"
    cachedir = "conda"
    runinfo = "nextflow-run-infos"
    databases = 'nextflow-databases'
}


timeline {
  enabled = true
  file = "${params.runinfo}/execution_timeline.html"
  overwrite = true
}

report {
  enabled = true
  file = "${params.runinfo}/execution_report.html"
  overwrite = true
}

dag {
  enabled = true
  file = "${params.runinfo}/pipeline_dag.html"
}

// Use test or test_full profile for automated pipeline CI tests?
profiles {

    standard {
        executor {
                name = "local"
               	cpus = params.max_cores
        }
        workDir = params.workdir
        params.cloudProcess = false
        docker { enabled = false }
        includeConfig 'configs/local.config'
        includeConfig 'configs/conda.config'
    }

    slurm {
      executor {
        name = 'slurm'
      }
      process.cache = "lenient"
      includeConfig 'configs/nodes.config'
    }

// executer
    local {
        executor {
                name = "local"
               	cpus = params.max_cores
        }
        workDir = params.workdir
        params.cloudProcess = false
        includeConfig 'configs/local.config'
    }


// engines
    conda {
        docker { enabled = false }
        includeConfig 'configs/conda.config'
    }

}
